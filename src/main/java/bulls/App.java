/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bulls;

import org.apache.log4j.BasicConfigurator;

import java.io.*;
import java.util.ArrayList;
import java.util.Random;

public class App {

    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(App.class);



    public static void main(String[] args) {
        BasicConfigurator.configure();
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        mainLoop:while(true) {
            System.out.println("Welcome to Bulls and Cows game");
            String secretword = getrandomword(Readfulltext("C:/Users/egore/Desktop/bulls/src/main/resources/dictionary.txt"));
            System.out.println(secretword);
            System.out.printf("I offered a %d-letter word,your guess?", secretword.length());
            System.out.println();
            for (int i = 0; i < 10; i++) {
                try {
                    String line = bf.readLine();
                    String getline = getHint(secretword, line);
                    System.out.println(getline);
                    if (getline.equals("You won")) {
                        break;
                    } else if (i == 9) {
                        System.out.println("You lose");
                    }
               }catch (StringIndexOutOfBoundsException e){
                   log.warn("StringIndexOutOfBoundsException , index out of range: 5");
                   i--;
                }
                catch (IOException e) {
                    log.warn("IOException in input text");
                }

            }
            System.out.println("Wanna play again? Y/N");
            try{
                while (true){
            String line = bf.readLine();
            if(!(line.equals("Y") || line.equals("N"))){
                log.warn("non-correct value");
            }
            else if(line.equals("Y")){
                break;
            }
            else if(line.equals("N")){
                break mainLoop;
            }
            }}
            catch (IOException e){
                log.warn("IOException in input Y/N");
            }


        }
    }
    public static ArrayList<String> Readfulltext(String name){
        ArrayList<String>  collection = new ArrayList<>();
        try {
            File file = new File(name);
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line = reader.readLine();
            collection.add(line);
            while (line != null) {
                line = reader.readLine();
                collection.add(line);
            }
        }
        catch (FileNotFoundException e){
            log.warn("FileNotFoundException in Readfulltext,filename = dictionary");
        }
        catch (IOException e){
            log.warn("IOException in Readfulltext,filename = dictionary");
        }
        return collection;
    }
    public static String getrandomword(ArrayList<String> array){
        int rnd = new Random().nextInt(array.size());
        return array.get(rnd);



    }
    public static String getHint(String secret, String guess) {

        int countBull = 0;
        int countCow = 0;
        for (int i = 0; i < guess.length(); i++) {
            if (guess.charAt(i) == secret.charAt(i)) {
                countBull++;
            } else if (secret.contains(guess.charAt(i) + "")) {
                countCow++;
            }
        }

        if (countBull == secret.length()) {
            return "You won";
        }


        return "Bulls: " + countBull + "  Cows: " + countCow;


    }


}
